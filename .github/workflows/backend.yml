name: Deploy Backend API

on:
  push:
    branches: [main]
    paths: ['app/backend/**', '.github/workflows/backend.yml']
  pull_request:
    branches: [main]
    paths: ['app/backend/**']
  workflow_dispatch:

env:
  REGISTRY_NAME: ${{ secrets.AZURE_REGISTRY_NAME }}
  IMAGE_NAME: todo-backend
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: demo
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      working-directory: ./app/backend
      run: |
        uv sync --frozen

    - name: Run tests
      working-directory: ./app/backend
      run: |
        uv run pytest tests/ -v --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./app/backend/coverage.xml
        flags: backend
        name: backend-coverage

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      working-directory: ./app/backend
      run: |
        docker build -t ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest .
        docker push ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        acrName: ${{ secrets.AZURE_REGISTRY_NAME }}
        containerAppName: ${{ secrets.AZURE_CONTAINER_APP_NAME }}
        resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
        imageToDeploy: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        environmentVariables: |
          AZURE_COSMOS_CONNECTION_STRING=${{ secrets.AZURE_COSMOS_CONNECTION_STRING }}
          APPLICATIONINSIGHTS_CONNECTION_STRING=${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}
          ENVIRONMENT=demo
